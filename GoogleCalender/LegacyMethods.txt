 //Oauth
 // private System.Timers.Timer _oauthRefreshTimer;
 //_oauthRefreshTimer = new System.Timers.Timer(3596400); //one hour in milliseconds

            // _oauthRefreshTimer.Elapsed += new ElapsedEventHandler(RefreshOauthToken);
            // _oauthRefreshTimer.Start();

 private void RefreshOauthToken(object source, ElapsedEventArgs e)
        {
            _calendarReadCredential.RefreshTokenAsync(CancellationToken.None);
        }
 
 //private void MarkTabAsOpen(string url)
        //{
        //    if (DateTime.Now.Day == day)
        //    {
        //        if (!commandHistory.ContainsKey(GetId()))
        //        {
        //            commandHistory[GetId()] = new List<string>();
        //        }
        //        commandHistory[GetId()].Add(url);


        //    }
        //    else
        //    {
        //        commandHistory = new Dictionary<string, List<string>> { };
        //    }
        //}

        //private bool TabOpened(string url)
        //{

        //    if (DateTime.Now.Day == day && commandHistory.ContainsKey(GetId()) && commandHistory[GetId()].Contains(url))
        //    {
        //        return true;
        //    }
        //    else
        //    {
        //        return false;
        //    }
        //}

        //private void URLHandler(string line)
        //{
        //    //C:\Program Files (x86)\Microsoft\Skype for Desktop\Skype.exe
        //    if (line.StartsWith("https://") || line.StartsWith("http://") || line.StartsWith("www."))
        //    {
        //        OpenUri(line);
        //    }
        //    if (line.StartsWith("<a href="))
        //    {
        //        List<string> urls = UnpackFrameURL(line);
        //        foreach (string url in urls)
        //        {

        //            OpenUri(url);

        //        }
        //    }
        //}

        //private bool StartingNow(DateTime dateTime)
        //{
        //    return DateTime.Compare(DateTime.Now, dateTime) == 0;
        //}

        //private void UpdateTextBox()
        //{
        //    if (events.Items != null && events.Items.Count > 0)
        //    {
        //        UpdateEventText("", 'o');
        //        foreach (var eventItem in events.Items)
        //        {
        //            if (StartedYet((DateTime)eventItem.Start.DateTime) && !FinishedYet((DateTime)eventItem.End.DateTime))
        //            {
        //                UpdateEventText(eventItem.Summary, 'a');
        //                ReadCalendarItem(eventItem);
        //            }

        //        }
        //    }
        //    else
        //    {
        //        NextUp.Text = "Calendar Empty";
        //    }
        //}

        
        //private void GoogleAPI()
        //{
        //    // List events.
        //    try
        //    {
        //        events = APIMethods.CalendarAPI.CallendarCallout(System.IO.Path.Combine(System.IO.Path.GetDirectoryName(Application.ExecutablePath), "credentials.json"));
        //        UpdateTextBox();
        //    }
        //    catch (Exception exception)
        //    {
        //        if (DebugMode)
        //        {
        //            WarningMessage("Request could not be fuffiled: " + exception, "Clock.exe");
        //        }
        //        else
        //        {
        //            NextUp.Text = "Error occurred, trying again." + exception + "Clock.exe";
        //        }
        //        CalibrateAPITimer();
        //        CalibrateClockTimer();
        //    }

        //}

        //private bool StartedYet(DateTime dateTime)
        //{
        //    if (DateTime.Compare(DateTime.Now, dateTime) <= 0)
        //    {
        //        return false;
        //    }
        //    else
        //    {
        //        return true;
        //    }
        //}

        //private bool FinishedYet(DateTime dateTime)
        //{
        //    if (DateTime.Compare(DateTime.Now, dateTime) < 0)
        //    {
        //        return false;
        //    }
        //    else
        //    {
        //        return true;
        //    }
        //}

        //private void ReadCalendarItem(Event item)
        //{
        //    var startTime = item.Start.DateTime;
        //    if (DebugMode)
        //    {
        //        InfoMessage(startTime.ToString(), "Clock.exe");
        //        DateTime.Compare(DateTime.Now, (DateTime)startTime);
        //    }

        //    string payload = item.Description;
        //    if (payload != null)
        //    {
        //        SetId(item.Id);
        //        string[] lines = payload.Split(new string[] { "<br>" }, StringSplitOptions.None);
        //        foreach (string line in lines)
        //        {

        //            //InfoMessage("Normal line:"+line, "Clock.exe", DebugMode);

        //            string cleanLine = ParseHTML(line);
        //            InfoMessage("Stripped line :" + cleanLine, "Clock.exe", DebugMode);
        //            if (cleanLine.StartsWith("["))
        //            {
        //                if (cleanLine.StartsWith("[delay)"))
        //                {
        //                    InfoMessage("Delay method still not functional", "Clock.exe", DebugMode);


        //                }
        //                else if (cleanLine.StartsWith("[exe]"))
        //                {

        //                    ExeHandler(cleanLine);
        //                }
        //            }
        //            else
        //            {

        //                URLHandler(cleanLine);
        //            }

        //        }

        //    }

        //}

        //private string ParseHTML(string inputHTML)
        //{
        //    string noHTMLNormalised = System.Text.RegularExpressions.Regex.Replace(System.Text.RegularExpressions.Regex.Replace(inputHTML, @"<[^>]+>|&nbsp;", "").Trim(), @"\s{2,}", " ");
        //    return noHTMLNormalised;
        //}


        //private void ExeHandler(string line)
        //{
        //    try
        //    {
        //        string program = @line.Substring(line.IndexOf("]") + 1);
        //        if (File.Exists(program) && !TabOpened(program))
        //        {

        //            System.Diagnostics.Process.Start(program);
        //            MarkTabAsOpen(program);
        //            InfoMessage("Started process: " + program, "Clock.exe", DebugMode);
        //        }
        //        else
        //        {
        //            if (File.Exists(ParseHTML(program)) && !TabOpened(program))
        //            {
        //                System.Diagnostics.Process.Start(ParseHTML(program));
        //                MarkTabAsOpen(program);
        //                InfoMessage("Started process: " + program, "Clock.exe", DebugMode);
        //            }
        //            else
        //            {
        //                if (!TabOpened(program))
        //                {
        //                    WarningMessage(program + " does not exist.", "Can't find program");
        //                }

        //            }
        //        }
        //    }
        //    catch (Exception exception)
        //    {
        //        WarningMessage("Fatal: " + exception.ToString(), "Can't find program");
        //    }
        //}


        /// <param name="item"></param>
        /// <param name="mode"> Use 'a' for append or 'o' for override </param>
        public void UpdateEventText(string text, char mode)
        {
            if (mode == 'a')
            {
                NextUp.Text += text;
            }
            else if (mode == 'o')
            {
                NextUp.Text = text;
            }

        }

        //public static bool IsValidUri(string uri)
        //{
        //    if (!Uri.IsWellFormedUriString(uri, UriKind.Absolute))
        //        return false;
        //    if (!Uri.TryCreate(uri, UriKind.Absolute, out Uri tmp))
        //        return false;
        //    return tmp.Scheme == Uri.UriSchemeHttp || tmp.Scheme == Uri.UriSchemeHttps;
        //}

        //public static List<string> UnpackFrameURL(string frame)
        //{

        //    var doc = new HtmlAgilityPack.HtmlDocument();
        //    doc.LoadHtml(frame);
        //    var nodes = doc.DocumentNode.SelectNodes("//a[@href]");
        //    if (nodes == null)
        //    {
        //        return new List<string>();
        //    }
        //    else
        //    {
        //        return nodes.ToList().ConvertAll(r => r.Attributes.ToList().ConvertAll(i => i.Value)).SelectMany(j => j).ToList();
        //    }
        //}

        //public void OpenUri(string uri)
        //{
        //    if (!TabOpened(uri) && IsValidUri(uri))
        //    {
        //        System.Diagnostics.Process.Start(uri);
        //        MarkTabAsOpen(uri);

        //        if (DebugMode)
        //        {
        //            InfoMessage(string.Format("Opened URL: {1} With Id :{0}", GetId(), uri), "Clock.exe");
        //        }
        //    }
        //}
